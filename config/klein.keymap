/*
 * Copyright (c) 2020 The ZMK Contributors
 * Test for Keymap Editor
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define NUM  2
#define FUN  3
#define SYM  4
#define MEDIA  5
#define BLU 6

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <180>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //          ------------------------------------------------------------------------------------------------------------
            //          |  Q  |  W  |  E   |  R   |  T   |                                           |  Y   |  U    |  I    |  O   |   P   |
            //          |  A  |  S  |  D   |  F   |  G   |                                           |  H   |  J    |  K    |  L   |   '   |
            //          |  Z  |  X  |  C   |  V   |  B   |                                           |  N   |  M    |  ,    |  .   |   /   |
            //                      | ESC  | SPC |  TAB | CALCULATOR |                         | MUTE | RET | BKSP | DEL |

            bindings = <
&kp Q         &kp W        &kp E       &kp R          &kp T    &kp Y  &kp U       &kp I            &kp O        &kp P
&mt LSHIFT A  &mt LCTRL S  &mt LALT D  &mt LCMD F     &kp G    &kp H  &mt RCMD J  &mt RIGHT_ALT K  &mt RCTRL L  &mt LSHIFT SQT
&kp Z         &kp X        &kp C       &kp V          &kp B    &kp N  &kp M       &kp COMMA        &kp DOT      &kp FSLH
&lt 3 ESC     &lt 2 DEL    &lt 1 TAB   &kp C_AL_CALC                  &kp C_MUTE  &lt 4 SPACE      &lt 5 BKSP   &lt 6 ENTER
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        nav_layer {
            bindings = <
&kp EXCL    &kp AT     &kp HASH    &kp DLLR     &kp PERCENT    &kp CARET      &kp AMPS    &kp STAR   &kp LPAR   &kp RPAR
&kp LSHFT   &kp LCTRL  &kp LALT    &kp LCMD     &trans         &kp PAGE_UP    &kp HOME    &kp UP     &kp END    &trans
&kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &trans         &kp PAGE_DOWN  &kp LEFT    &kp DOWN   &kp RIGHT  &kp INS
&trans      &trans     &trans      &bootloader                                &bt BT_NXT  &kp SPACE  &kp BKSP   &kp ENTER
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        num_layer {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0
&kp LEFT_SHIFT  &kp LCTRL     &kp LALT      &kp LCMD      &trans    &trans        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans
&trans          &trans        &trans        &trans        &trans    &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&trans          &trans        &trans        &bootloader                           &bootloader   &trans        &trans        &kp N0
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        media_layer {
            bindings = <
&trans     &trans     &trans    &trans       &trans    &trans      &mkp LCLK     &trans        &mkp RCLK   &trans
&kp LSHFT  &kp LCTRL  &kp LALT  &kp LCMD     &trans    &kp K_PREV  &kp K_VOL_DN  &kp K_VOL_UP  &kp K_NEXT  &trans
&trans     &trans     &trans    &trans       &trans    &trans      &trans        &trans        &trans      &trans
&trans     &trans     &trans    &bootloader                        &bootloader   &kp K_STOP2   &kp K_PP    &kp K_MUTE
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        fun_layer {
            bindings = <
&kp F12  &kp F7     &kp F8   &kp F9       &kp PSCRN          &trans  &trans       &trans     &trans    &trans
&kp F11  &kp F4     &kp F5   &kp F6       &kp SYSREQ         &trans  &kp LSHFT    &kp LCTRL  &kp LALT  &kp LGUI
&kp F10  &kp F1     &kp F2   &kp F3       &kp PAUSE_BREAK    &trans  &trans       &trans     &trans    &trans
&kp ESC  &kp SPACE  &kp TAB  &bootloader                             &bootloader  &trans     &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        sym_layer {
            bindings = <
&kp LS(LBKT)    &kp LS(N7)  &kp LS(N8)     &kp LS(N9)   &kp LS(RBKT)     &trans  &trans       &trans     &trans    &trans
&kp LS(SEMI)    &kp LS(N4)  &kp LS(N5)     &kp LS(N6)   &kp LS(EQUAL)    &trans  &kp LSHFT    &kp LCTRL  &kp LALT  &kp LGUI
&kp LS(GRAVE)   &kp LS(N1)  &kp LS(N2)     &kp LS(N3)   &kp LS(BSLH)     &trans  &trans       &trans     &trans    &trans
&kp LS(PERIOD)  &kp LS(N0)  &kp LS(MINUS)  &bootloader                           &bootloader  &trans     &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        blu_layer {
            bindings = <
&trans  &trans        &trans        &trans        &bootloader    &bt BT_CLR  &trans      &trans      &trans  &trans
&trans  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans         &trans      &bt BT_PRV  &bt BT_NXT  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans         &trans      &trans      &trans      &trans  &trans
&trans  &trans        &trans        &trans                                   &trans      &trans      &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};
